#titanlib_path <- "/home/cristianl/projects/titanlib/build/extras"
titanlib_path <- "/home/cristianl/projects/titanlib/build/extras"
#titanlib_path <- "/home/lineb/projects/titanlib/titanlib/build/extras"
dyn.load( file.path( titanlib_path, 
                     paste("SWIG/R/titanlib", .Platform$dynlib.ext, sep="")))
source(   file.path( titanlib_path,"SWIG/R/titanlib.R"))
#---------------------------------------------------------------
# Test with small vectors
lats <- c(60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60)
lons <- 10 + 0.005 * 0:(length(lats)-1)
elevs <- rep(0, length(lats))
values <- round( 10*sin(lons*2*base::pi/(max(lons)-min(lons))), 2)
length(lats)
length(ons)
length(lons)
length(elevs)
length(values)
obs_to_check = rep(1, length(lats))
background_values = rep(0, length(lats))
background_elab_type = "median_outer_circle"
N = length(lats)
num_min_outer = 3
num_max_outer = 10
inner_radius = 20000
outer_radius = 50000
num_iterations = 10
num_min_prof = 1
min_elev_diff = 100
min_horizontal_scale = 250 
max_horizontal_scale = 100000
kth_closest_obs_horizontal_scale = 2
vertical_scale = 200
tpos = rep(1,N) * 16
tneg = rep(1,N) * 16
t_sod = rep(1,N) * 4
eps2 = rep(1,N) * 0.5
values_mina = values - 20
values_maxa = values + 20
values_minv = values - 1
values_maxv = values + 1
debug = T
points = Points(lats, lons, elevs)
background_elab_type = "median_outer_circle"
background_elab_type = "mean_outer_circle"
res <- sct_resistant(points, values, obs_to_check, background_values, background_elab_type, num_min_outer, num_max_outer, inner_radius, outer_radius, num_iterations, num_min_prof, min_elev_diff, min_horizontal_scale, max_horizontal_scale, kth_closest_obs_horizontal_scale, vertical_scale, values_mina, values_maxa, values_minv, values_maxv, eps2, tpos, tneg, debug)
#titanlib_path <- "/home/cristianl/projects/titanlib/build/extras"
titanlib_path <- "/home/cristianl/projects/titanlib/build/extras"
#titanlib_path <- "/home/lineb/projects/titanlib/titanlib/build/extras"
dyn.load( file.path( titanlib_path, 
                     paste("SWIG/R/titanlib", .Platform$dynlib.ext, sep="")))
source(   file.path( titanlib_path,"SWIG/R/titanlib.R"))
#---------------------------------------------------------------
# Test with small vectors
lats <- c(60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60)
lons <- 10 + 0.005 * 0:(length(lats)-1)
elevs <- rep(0, length(lats))
values <- round( 10*sin(lons*2*base::pi/(max(lons)-min(lons))), 2)
#values = c(0, 0, 0, 0, -100)
obs_to_check = rep(1, length(lats))
background_values = rep(0, length(lats))
background_elab_type = "median_outer_circle"
N = length(lats)
num_min_outer = 3
num_max_outer = 10
inner_radius = 20000
outer_radius = 50000
num_iterations = 10
num_min_prof = 1
min_elev_diff = 100
min_horizontal_scale = 250 
max_horizontal_scale = 100000
kth_closest_obs_horizontal_scale = 2
vertical_scale = 200
tpos = rep(1,N) * 16
tneg = rep(1,N) * 16
t_sod = rep(1,N) * 4
eps2 = rep(1,N) * 0.5
values_mina = values - 20
values_maxa = values + 20
values_minv = values - 1
values_maxv = values + 1
debug = T
points = Points(lats, lons, elevs)
res <- sct_resistant(points, values, obs_to_check, background_values, background_elab_type, num_min_outer, num_max_outer, inner_radius, outer_radius, num_iterations, num_min_prof, min_elev_diff, min_horizontal_scale, max_horizontal_scale, kth_closest_obs_horizontal_scale, vertical_scale, values_mina, values_maxa, values_minv, values_maxv, eps2, tpos, tneg, debug)
titanlib_path <- "/home/cristianl/projects/titanlib/build/extras"
dyn.load( file.path( titanlib_path, 
                     paste("SWIG/R/titanlib", .Platform$dynlib.ext, sep="")))
source(   file.path( titanlib_path,"SWIG/R/titanlib.R"))
#---------------------------------------------------------------
# Test with small vectors
lats <- c(60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60)
lons <- 10 + 0.005 * 0:(length(lats)-1)
elevs <- rep(0, length(lats))
values <- round( 10*sin(lons*2*base::pi/(max(lons)-min(lons))), 2)
#values = c(0, 0, 0, 0, -100)
obs_to_check = rep(1, length(lats))
background_values = rep(0, length(lats))
background_elab_type = "median_outer_circle"
N = length(lats)
num_min_outer = 3
num_max_outer = 10
inner_radius = 20000
outer_radius = 50000
num_iterations = 10
num_min_prof = 1
min_elev_diff = 100
min_horizontal_scale = 250 
max_horizontal_scale = 100000
kth_closest_obs_horizontal_scale = 2
vertical_scale = 200
tpos = rep(1,N) * 16
tneg = rep(1,N) * 16
t_sod = rep(1,N) * 4
eps2 = rep(1,N) * 0.5
values_mina = values - 20
values_maxa = values + 20
values_minv = values - 1
values_maxv = values + 1
debug = T
points = Points(lats, lons, elevs)
res <- sct_resistant(points, values, obs_to_check, background_values, background_elab_type, num_min_outer, num_max_outer, inner_radius, outer_radius, num_iterations, num_min_prof, min_elev_diff, min_horizontal_scale, max_horizontal_scale, kth_closest_obs_horizontal_scale, vertical_scale, values_mina, values_maxa, values_minv, values_maxv, eps2, tpos, tneg, debug)
titanlib_path <- "/home/cristianl/projects/titanlib/build/extras"
dyn.load( file.path( titanlib_path, 
                     paste("SWIG/R/titanlib", .Platform$dynlib.ext, sep="")))
source(   file.path( titanlib_path,"SWIG/R/titanlib.R"))
#---------------------------------------------------------------
# Test with small vectors
lats <- c(60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60)
lons <- 10 + 0.005 * 0:(length(lats)-1)
elevs <- rep(0, length(lats))
values <- round( 10*sin(lons*2*base::pi/(max(lons)-min(lons))), 2)
#values = c(0, 0, 0, 0, -100)
obs_to_check = rep(1, length(lats))
background_values = rep(0, length(lats))
background_elab_type = 3
N = length(lats)
num_min_outer = 3
num_max_outer = 10
inner_radius = 20000
outer_radius = 50000
num_iterations = 10
num_min_prof = 1
min_elev_diff = 100
min_horizontal_scale = 250 
max_horizontal_scale = 100000
kth_closest_obs_horizontal_scale = 2
vertical_scale = 200
tpos = rep(1,N) * 16
tneg = rep(1,N) * 16
t_sod = rep(1,N) * 4
eps2 = rep(1,N) * 0.5
values_mina = values - 20
values_maxa = values + 20
values_minv = values - 1
values_maxv = values + 1
debug = T
points = Points(lats, lons, elevs)
res <- sct_resistant(points, values, obs_to_check, background_values, background_elab_type, num_min_outer, num_max_outer, inner_radius, outer_radius, num_iterations, num_min_prof, min_elev_diff, min_horizontal_scale, max_horizontal_scale, kth_closest_obs_horizontal_scale, vertical_scale, values_mina, values_maxa, values_minv, values_maxv, eps2, tpos, tneg, debug)
